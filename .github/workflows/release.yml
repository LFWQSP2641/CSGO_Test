name: Build and Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: darwin

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Install Protocol Buffers (Ubuntu/macOS)
      if: runner.os != 'Windows'
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install protobuf
        fi

    - name: Install Protocol Buffers (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install protoc --yes

    - name: Install dependencies
      run: make install-deps

    - name: Build release
      run: make release

    - name: Create release package
      run: make package-release

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gotest-${{ matrix.platform }}-release
        path: dist/release/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Create release archives
      run: |
        cd artifacts
        for dir in */; do
          platform=$(echo "$dir" | sed 's/gotest-\(.*\)-release\//\1/')
          tar -czf "gotest-${platform}-release.tar.gz" -C "$dir" .
        done

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
